---
- hosts: all
  name: Enable xDebug
  become: yes

  vars_files:
    - ./devenv_vars.default.yml
    - ./devenv_vars.config.yml
  
  handlers:
    - name: restart php-fpm
      service: name=php-fpm state=restarted
  
  tasks:
    
    - name: Check for existing xdebug ini file
      stat:
        path: "{{ php_xdebug_ini_path }}"
      register: xdebug_ini_stat
    
    - name: Check for disabled xdebug ini file
      stat:
        path: "{{ php_xdebug_ini_path }}.disabled"
      register: xdebug_ini_disabled_stat
    
    - name: Copy disabled xdebug ini file to enable it
      copy:
        remote_src: true
        src: "{{ php_xdebug_ini_path }}.disabled"
        dest: "{{ php_xdebug_ini_path }}"
      when: xdebug_ini_disabled_stat.stat.exists
      notify:
        - restart php-fpm

    - name: Remove disabled xdebug ini file
      file:
        path: "{{ php_xdebug_ini_path }}.disabled"
        state: absent
    
    - name: Check if xdebug is listed among php module list
      shell: php -m | grep -i xdebug | head -1
      register: php_module_xdebug_match
      changed_when: false
      check_mode: no
    
    - debug: 
        var: php_module_xdebug_match.stdout
    
    - fail:
        msg: "ERROR: Xdebug still seems to be disabled somehow!"
      when: not ansible_check_mode and php_module_xdebug_match is defined and php_module_xdebug_match.stdout == ""

    # Create 'php-debug' alias for 'php -d xdebug.remote_autostart=on -f'
    - name: Create php-debug alias
      lineinfile:
        path: /home/www-data/.bashrc
        line: "alias php-debug='export PHP_IDE_CONFIG=serverName='{{ app_domain }}' && php -d xdebug.remote_autostart=on -f'"
        owner: www-data
        regexp: "^alias php-debug='export PHP_IDE_CONFIG=serverName='{{ app_domain }}' && php -d xdebug.remote_autostart=on -f'$"
        state: present
        insertafter: EOF
        create: True
