---
# Define the supported ansible version requirements of these playbooks
ansible_version_require_min: "2.11.3"         # Example "2.9" or "2"
ansible_version_require_min_operator: ">="  # Example ">=" or ">"
ansible_version_require_max: "3"            # Example "2.10" or "3"
ansible_version_require_max_operator: "<"   # Example "<=" or "<"


# --- System Configs
syseng_access_users:
  # - { username: www-data, pubkey: ~/.ssh/id_ed25519.pub }
  - { username: www-data, pubkey: ~/.ssh/id_rsa.pub }
www_user_ssh_keys:
  # - ~/.ssh/id_ed25519.pub
  - ~/.ssh/id_rsa.pub

app_domain: example.lan
app_root_dir: /var/www/data
app_root_install_dir: "{{ app_root_dir }}/magento"

# Check to see what your system's timezone is set to
# ls -la /etc/localtime
timezone_name: America/Chicago

inventory_group: devenv
app_user: www-data

virtualhost_disks: []

location_var_www: ""


# --- Magento Demo Configs
magento_demo_hostname: "{{ app_domain }}"
magento_demo_env_root: "{{ app_root_dir }}"
magento_demo_magento_root: "{{ app_root_install_dir }}"
magento_demo_user: www-data
magento_demo_group: www-data
magento_demo_config_overrides:
  MAGENTO_COMPOSER_PROJECT: magento/project-community-edition
  MAGENTO_REL_VER: "2.4.2"
  MAGENTO_DEPLOY_MODE: "developer"
  MAGENTO_FPC: "redis"
  REDIS_OBJ_HOST: "localhost"
  REDIS_OBJ_PORT: "6379"
  REDIS_OBJ_DB: "0"
  REDIS_SES_HOST: "localhost"
  REDIS_SES_PORT: "6379"
  REDIS_SES_DB: "1"
  VARNISH_HOST: "localhost"
  VARNISH_PORT: "6081"
  SEARCH_ENGINE: "elasticsearch7"
  ELASTIC_HOST: "localhost"
  ELASTIC_PORT: "9200"
  ELASTIC_ENABLE_AUTH: "1"
  ELASTIC_USERNAME: "elastic"
  ELASTIC_PASSWORD: "changeme"
  SHOULD_SETUP_TFA: "true"


# --- Tech Stack (Services) Configuration
use_classyllama_repo_ius: true
use_geerlingguy_repo_remi: true
use_classyllama_repo_php_appstream: false
use_classyllama_repo_php_remi_modular: false
php_version: 74
php_fpm_pm: ondemand
php_fpm_pm_max_children: 10
php_fpm_memory_percentage: 50
php_additional_modules:
  - pecl-xdebug
  - pecl-imagick
php_fpm_global_additional_ini:
  display_errors: "on"
  html_errors: "on"
  error_reporting: E_ALL ^ E_DEPRECATED
  max_execution_time: 600
  date.timezone: "{{ timezone_name }}"
  session.gc_maxlifetime: 7200
  openssl.cafile: /etc/pki/tls/certs/ca-bundle.crt
php_extension_xdebug_ini:
  zend_extension: xdebug.so
  xdebug.remote_enable: "on"
  xdebug.remote_host: 172.28.128.1
  xdebug.idekey: PHPSTORM
  xdebug.show_local_vars: "on"
  xdebug.var_display_max_depth: 3
  xdebug.max_nesting_level: 1000
  xdebug.file_link_format :  '"phpstorm://open?file=%f&line=%l"'
  xdebug.profiler_enable: 0
  xdebug.profiler_output_dir: "/tmp"
  xdebug.profiler_output_name: cachegrind.out.%s.%t
php_xdebug_ini_path: "/etc/php.d/15-xdebug.ini"

php_mailhog_ini_path: "/etc/php.d/20-mailhog.ini"
php_mailhog_ini:
  sendmail_path: "/usr/bin/msmtp --read-recipients -a default"
mailhog_install_path: /usr/local/bin/
mailhog_install_name: MailHog
msmtp_log_path: /var/log/msmtp.log

use_classyllama_repo_python_appstream: false
python_package_name: python # CentOS 7 uses Python 2.7
python_software_packages:
  - "{{ python_package_name }}"
  - "{{ python_package_name }}-pip"
  - "{{ python_package_name }}-devel"
  - "MySQL-python" # Python 2.7 MySQL library package

use_classyllama_mariadb: false
use_classyllama_percona: true
percona_version: 57
mysqld_memory_percentage: 25
mysqld_max_connections: 50

use_classyllama_repo_varnish: true
use_classyllama_varnish: true
varnish_version: 64
varnish_data_storage_size: 512M

use_classyllama_repo_nginx: true
use_classyllama_repo_nginx_appstream: false
nginx_stream_version: "1.18"
nginx_vhosts:
  - name: "{{ app_domain }}"
    pool: data
    params:
      server_name: "{{ app_domain }}"
      webroot: "{{ app_root_dir }}/current/pub"
      #proxy_port: 6081
      proxy_port: 8080
    includes:
      - available.d/magento2-static.conf
nginx_backends:
  - name: www-data
    pool: data
    listen: 8080
    webroot: "{{ app_root_dir }}/current/pub"
    includes:
      - default.d/nginx-status.conf
      - available.d/realip.conf
      - available.d/magento2.conf
nginx_extras:
  - conf.d/map.conf
  - available.d/realip.conf
  - { src: nginx/magento2-static.conf, dest: available.d/magento2-static.conf }
  - { src: nginx/magento2.conf, dest: available.d/magento2.conf }
nginx_groups: [ www-data ]
nginx_logrotate_users: [ www-data ]
nginx_conf_auth_allow: []
nginx_http_additional_config:
  map_hash_bucket_size: "2048"
nginx_diffie_hellman_bits: 2048 # Optimized this for build speed. Production environments should use 4096
nginx_config_hsts: no
nginx_sign_task: tasks/devenv_ssl-sign.yml
nginx_ssl_cert_dir: /etc/nginx/ssl

# CentOS 7 / Redis 6 (Remi)
# use_classyllama_repo_ius: true
# use_geerlingguy_repo_remi: true
use_classyllama_multi_redis: true
use_classyllama_repo_redis_appstream: false
redis_package_name: "redis"
redis_enablerepo: "remi"
redis_version: 60
redis_obj_maxmem: 1gb
use_dedicated_redis_ses: false
redis_ses_maxmem: 256mb
use_dedicated_redis_fpc: false
redis_fpc_maxmem: 512mb

use_elastic_elasticsearch: true
es_version: 7.12.1
es_config:
  node.name: "node1"
  cluster.name: "test-cluster"
  http.host: 0.0.0.0,
  http.port: 9200
  transport.tcp.port: 9300
  node.data: true
  node.master: true
  bootstrap.memory_lock: true
es_heap_size: "512m"
# es_enable_xpack: false
es_api_basic_auth_username: elastic
es_api_basic_auth_password: changeme
es_plugins: []
#  - plugin: ingest-attachment
elasticaccess_file: /home/www-data/.elastic_access.json

use_classyllama_repo_nodesource: false
use_classyllama_elasticdump: false
install_nodejs: false

# --- Additional Tools Configuration
yum_update_and_reboot: always # (always, initial, never)
www_user_use_default_html: false # this allows the www-data user to use /var/www/data/
use_imagemagick: false
use_classyllama_n98_magerun: true
use_classyllama_magento_demo: true
use_current_to_app_install_symlink: true
use_create_www_projects_dir: true
use_create_www_app_install_dir: true
database_create_user: magento_data
database_create_db: demo_data
#mysqld_cred_persist: /datadb/.my.cnf
load_magento_composer_auth_from_host: true
use_classyllama_web_info: true
use_vm_cache: true
composer_selfupdate: false

use_morgangraphics_nvm: true
morgangraphics_nvm_commands:
  - "nvm install node"
  - "npm install -g grunt-cli"

cachetool_config:
  - path: /home/www-data
    adapter: fastcgi
    fastcgi: /var/run/php-fpm/www-data.sock
    temp_dir: /dev/shm/cachetool
    extensions: [ opcache ]

devenv_openssl_rootca_dir: /etc/openssl/rootca
devenv_openssl_ca_config: /etc/openssl/devenv_openssl_ca_config
devenv_openssl_req_config: /etc/openssl/devenv_openssl_req_config

web_info_ssl_cert_task: tasks/devenv_ssl-sign.yml
