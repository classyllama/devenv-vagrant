---
- name: Common
  hosts: all
  become: true

  vars_files:
    - ./devenv_vars.default.yml
    - ./devenv_vars.config.yml
  
  roles:
    - { role: classyllama.syseng-access }
    - { role: geerlingguy.repo-epel }
    - { role: classyllama.repo_ius, when: use_classyllama_repo_ius | default(false) }
  
  tasks:
    - name: Common Software Packages
      package:
        name: 
          - wget
          - bc
          - rsync
          - yara
          - unzip
          - words
          - coreutils
          - oathtool
    
    # EL7 Packages
    - name: Software Packages (EL7)
      package:
        name: 
          - yum-plugin-replace
      when:
        - ansible_os_family == 'RedHat'
        - ansible_distribution_major_version <= '7'
        - use_classyllama_repo_ius == true

    - name: Additional Diagnostics Tools
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - nmap-ncat
        - nmap

    # - name: Disable SELinux enforcement
    #   selinux:
    #     state: disabled
    
    
    
    # Yum update and reboot as needed
    - name: Check for initial_updated_all_yum_packages.flag
      stat:
        path: /root/initial_updated_all_yum_packages.flag
      register: stat_updated_all_yum_packages

    - name: Yum update and reboot as needed
      block:

        # Fix for jemalloc which exists in epel and percona repositories - setting higher priority for EPEL
        - name: Check if EPEL repository exists
          stat:
            path: /etc/yum.repos.d/epel.repo
          register: epel_repo_config

        - name: Check if priority is added for EPEL
          shell: grep -E '^priority' /etc/yum.repos.d/epel.repo |wc -l
          register: epel_repo_config_priority
          when:
            - epel_repo_config.stat.exists

        - name: Add priority for EPEL
          shell: sed -i -e '/^countme=.*/a priority=98' /etc/yum.repos.d/epel.repo
          when:
            - ansible_os_family == 'RedHat'
            - epel_repo_config.stat.exists
            - (epel_repo_config_priority.stdout|int == 0)

        - name: upgrade all packages
          package:
            name: '*'
            state: latest
          tags: yum-update
    
        - name: check for reboot hint
          shell: if [ $(rpm -q --last kernel | awk 'NR==1 {print $1}') != kernel-$(uname -r) ]; then echo 'reboot'; else echo 'Kernel is current'; fi
          ignore_errors: true
          changed_when: false
          register: reboot_hint
          tags: yum-update
    
        - name: Rebooting ...
          shell: sleep 5 && shutdown -r now 'Rebooting (Yum Updates)'
          async: 1
          poll: 0
          ignore_errors: true
          changed_when: "reboot_hint.stdout == 'reboot'"
          register: rebooting
          tags: yum-update
          when: reboot_hint.stdout == 'reboot'

        - name: Wait for remote system to reboot...
          become: no
          wait_for_connection:
            delay: 60
          when: rebooting is changed
          tags: yum-update

        - name: Write flag file to disable future yum updates
          copy:
            content: ""
            dest: /root/initial_updated_all_yum_packages.flag
            force: no
            group: root
            owner: root
            mode: 0555
      
      when: (yum_update_and_reboot == "always") or (yum_update_and_reboot == "initial" and not stat_updated_all_yum_packages.stat.exists)
