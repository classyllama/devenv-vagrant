# {{ ansible_managed }}

set $MAGE_RUN_CODE $store_code;
set $MAGE_RUN_TYPE store;
set $MAGE_MODE production;

location ~* ^/media/(customer|downloadable|import|theme_customization/.*\.xml)/ { return 403; }
location ~* ^/(setup|update)/ { return 403; }
location ~* (?<!^\/rest\/V1\/products)\/\. { return 403; }

error_page 404 = /errors/404.php;

# Deny access to sensitive files
location /.user.ini {
    deny all;
}

location / {
    try_files $uri $uri/ /index.php$is_args$args;
}

location /robots.txt {
    try_files /robots.txt /robots/${MAGE_RUN_CODE}_robots.txt =404;
}

location /sitemap.xml {
    try_files /sitemaps/${MAGE_RUN_CODE}_sitemap.xml =404;
}

location /pub/ {
    location ~ ^/pub/media/(downloadable|customer|import|custom_options|theme_customization/.*\.xml) {
        deny all;
    }
    alias $MAGE_ROOT/pub/;
    add_header X-Frame-Options "SAMEORIGIN";
}

location /static/ {

    if ($request_method = OPTIONS ) {
      add_header Access-Control-Allow-Origin "{{ nginx_access_control_allow_origin }}";     # Allow use from CDN origin
      add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
      add_header Access-Control-Allow-Headers "X-Requested-With";
      add_header Access-Control-Max-Age 2592000; # Cache pre-flight info for 30 days
      # Some browsers may enforce a limit of only caching for 10 minutes.
      add_header Content-Type "text/plain; charset=utf-8";
      add_header Content-Length 0;

      return 204;
    }

    # Uncomment the following line in production mode
    expires max;

    # Remove signature of the static files that is used to overcome the browser cache
    location ~ ^/static/version {
        rewrite ^/static/(version\d*/)?(.*)$ /static/$2 last;
    }
    
    location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2|html|json)$ {
        add_header Cache-Control "public";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header Access-Control-Allow-Origin "{{ nginx_access_control_allow_origin }}";     # Allow use from CDN origin
        expires +1y;

        if (!-f $request_filename) {
            rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
        
        if ($request_method = OPTIONS ) {
          add_header Access-Control-Allow-Origin "{{ nginx_access_control_allow_origin }}";     # Allow use from CDN origin
          add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
          add_header Access-Control-Allow-Headers "X-Requested-With";
          add_header Access-Control-Max-Age 2592000; # Cache pre-flight info for 30 days
          # Some browsers may enforce a limit of only caching for 10 minutes.
          add_header Content-Type "text/plain; charset=utf-8";
          add_header Content-Length 0;

          return 204;
        }
    }
    location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
        add_header Cache-Control "no-store";
        add_header X-Frame-Options "SAMEORIGIN";
        expires    off;

        if (!-f $request_filename) {
           rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
    }
    if (!-f $request_filename) {
        rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
    }
    add_header X-Frame-Options "SAMEORIGIN";

    # serve files directly from nginx or return 404
    try_files $uri =404;
}

location /media/ {

## The following section allows to offload image resizing from Magento instance to the Nginx.
## Catalog image URL format should be set accordingly.
## See https://docs.magento.com/user-guide/configuration/general/web.html#url-options
#   location ~* ^/media/catalog/.* {
#
#       # Replace placeholders and uncomment the line below to serve product images from public S3
#       # See examples of S3 authentication at https://github.com/anomalizer/ngx_aws_auth
#       # resolver 8.8.8.8;
#       # proxy_pass https://<bucket-name>.<region-name>.amazonaws.com;
#
#       set $width "-";
#       set $height "-";
#       if ($arg_width != '') {
#           set $width $arg_width;
#       }
#       if ($arg_height != '') {
#           set $height $arg_height;
#       }
#       image_filter resize $width $height;
#       image_filter_jpeg_quality 90;
#   }

    try_files $uri $uri/ /get.php$is_args$args;

    location ~ ^/media/theme_customization/.*\.xml {
        deny all;
    }

    location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
        add_header Cache-Control "public";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header Access-Control-Allow-Origin "{{ nginx_access_control_allow_origin }}";     # Allow use from CDN origin
        expires +1y;
        try_files $uri $uri/ /get.php$is_args$args;
    }
    location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
        add_header Cache-Control "no-store";
        add_header X-Frame-Options "SAMEORIGIN";
        expires    off;
        try_files $uri $uri/ /get.php$is_args$args;
    }
    add_header X-Frame-Options "SAMEORIGIN";
}

location /media/customer/ {
    deny all;
}

location /media/downloadable/ {
    deny all;
}

location /media/import/ {
    deny all;
}

location /media/custom_options/ {
    deny all;
}

location /errors/ {
    location ~* \.xml$ {
        deny all;
    }
}

location ~ ^/(index|get|static|errors/report|errors/404|errors/503|health_check|info|debug|health|report|404|503)\.php$ {
    try_files $uri =404;

    fastcgi_pass $fastcgi_backend;

    fastcgi_buffers 1024 4k;
    fastcgi_buffer_size 128k;
    fastcgi_busy_buffers_size 256k;
    fastcgi_read_timeout 3600s;

    include fastcgi_params;

    fastcgi_param HTTPS $fastcgi_https;

    fastcgi_param MAGE_RUN_CODE $MAGE_RUN_CODE;
    fastcgi_param MAGE_RUN_TYPE $MAGE_RUN_TYPE;
    fastcgi_param MAGE_MODE $MAGE_MODE;

    fastcgi_param PHP_IDE_CONFIG serverName=$host;

    # upward-php required environment variables
    fastcgi_param MAGENTO_BACKEND_URL "https://$http_host/";
    fastcgi_param NODE_ENV "production";

    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME  $realpath_root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT    $realpath_root;
    fastcgi_param SERVER_PORT      $http_x_forwarded_port;
{% if newrelic_apm_key is defined and newrelic_apm_key %}
    fastcgi_param PHP_VALUE        "newrelic.appname=\"$newrelic_appname;magento-$backend_pool\";";
{% endif -%}
}

gzip on;
gzip_disable "msie6";

gzip_comp_level 6;
gzip_min_length 1100;
gzip_buffers 16 8k;
gzip_proxied any;
gzip_types
    text/plain
    text/css
    text/js
    text/xml
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/xml+rss
    image/svg+xml;
gzip_vary on;

# Banned locations (only reached if the earlier PHP entry point regexes don't match)
location ~* (\.php$|\.phtml$|\.htaccess$|\.git) {
    deny all;
}
